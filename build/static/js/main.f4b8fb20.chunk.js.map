{"version":3,"sources":["layout/navbar.js","search.js","globalstats.js","main.js","detailview.js","about.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","useEffect","elems","document","querySelectorAll","M","Sidenav","init","className","href","style","fontSize","data-target","id","SearchCountry","state","countries","country","disabled","updateCountry","value","setState","console","log","this","props","axios","get","then","res","data","catch","err","message","history","push","trim","marginTop","icon","faFlag","options","map","obj","label","Country","Slug","onChange","placeholder","Component","GlobalStats","withRouter","results","errMsg","isLoading","formatValue","toFixed","display","justifyContent","faGlobeAmericas","duration","easing","Main","faChartBar","DetailView","confirmed","deaths","recovered","isCL","isDL","isRL","totalRecovered","totalConfirmed","totalDeaths","Tabs","querySelector","match","params","width","height","Cases","Date","slice","Confirmed","margin","top","right","left","bottom","dataKey","stroke","strokeDasharray","fill","barSize","About","faGithub","faLinkedin","App","path","component","render","Boolean","window","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f4b8fb20.chunk.js","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nexport default function NavBar() {\n  useEffect(() => {\n    var elems = document.querySelectorAll(\".sidenav\");\n    M.Sidenav.init(elems, {});\n  }, []);\n  return (\n    <Fragment>\n      <nav>\n        <div className=\"nav-wrapper\">\n          <a href=\"#!\" className=\"brand-logo \">\n            <i className=\"material-icons hide-on-small-and-down\" style={{ fontSize: \"50px\" }}>\n              assessment\n            </i>{\" \"}\n            Corona Stats\n          </a>\n          <a href=\"#!\" data-target=\"mobile-demo\" className=\"sidenav-trigger\">\n            <i className=\"material-icons\">menu</i>\n          </a>\n          <ul className=\"right hide-on-med-and-down\">\n            <li>\n              <a href=\"/#global\">Global</a>\n            </li>\n            <li>\n              <a href=\"/#search\">Country</a>\n            </li>\n            <li>\n              <a href=\"/about\">About</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <ul className=\"sidenav\" id=\"mobile-demo\">\n        <li>\n          <a href=\"/#global\">Global</a>\n        </li>\n        <li>\n          <a href=\"/#search\">Country</a>\n        </li>\n        <li>\n          <a href=\"/about\">About</a>\n        </li>\n      </ul>\n    </Fragment>\n  );\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlag} from '@fortawesome/free-regular-svg-icons';\nimport {withRouter } from 'react-router-dom';\n\nimport Select from 'react-select';\n\n\n\nexport class SearchCountry extends Component {\n  state = {\n    countries: null,\n    country:null,\n    disabled: false,\n  };\n  componentDidMount() {\n      console.log(this.props)\n    axios\n      .get(\"https://api.covid19api.com/countries\")\n      .then((res) => this.setState({ countries: res.data }))\n      .catch((err) => console.log(err.message));\n  }\n  componentDidUpdate(){\n      if(this.state.country){\n          this.props.history.push(\"/\"+this.state.country.trim());\n      }\n  }\n  \n\n  updateCountry = (value) => {this.setState({ country: value.value });console.log(\"Country: \",this.state.country) };\n \n  render() {\n\n    return (\n      <div  id=\"search\" style={{marginTop:\"50px\"}}>\n       \n          <h4><FontAwesomeIcon icon={faFlag} />  Country Wise</h4>\n         <p>\n             Get detailed Statistics of Corona in each countries .\n         </p>\n          {this.state.countries?\n          <div>\n\n          <Select options={this.state.countries.map(obj => {\n\n              return{\n                  label:obj.Country,\n                  value:obj.Slug\n              }\n          })}   onChange={this.updateCountry} placeholder=\"  Search Your Country\" />\n         </div>  :null}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SearchCountry);\n","import React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGlobeAmericas } from '@fortawesome/free-solid-svg-icons'\nimport AnimatedNumber from \"animated-number-react\";\nimport './index.css';\nimport {withRouter} from 'react-router-dom';\nimport  { SearchCountry } from './search';\nexport class GlobalStats extends Component {\n  state = {\n    results: null,\n    errMsg: null,\n    isLoading:false\n  };\n \n  componentDidMount() {\n  \n    axios\n      .get(\"https://api.covid19api.com/summary\")\n      .then((res) => this.setState({ results: res.data ,isLoading:false}))\n      .catch((err) => this.setState({ errMsg: err,isLoading:false }));\n      this.setState({isLoading:true});\n  }\n  formatValue = (value) => value.toFixed(0);\n  render() {\n    console.log(this.state.results)\n    return (\n      <Fragment>\n       <div>\n       { (this.state.isLoading) ? <div  style={{display:'flex',justifyContent:'center'}}><div className=\"lds-facebook col s12 m\"><div></div><div></div><div></div></div></div>:null}\n       </div>\n          {  this.state.results ?\n          <div className=\"section\">\n          <h4 id=\"global\" className=\"section scrollspy\"><FontAwesomeIcon icon={faGlobeAmericas} />  Global</h4>\n        <div className=\"row\">\n          \n          <div className=\"col s12 m6 l4\">\n            <h5>Total Confirmed Cases</h5>\n            <h6>\n              {\" \"}\n              <b>\n                <AnimatedNumber\n                  value={this.state.results[\"Global\"][\"TotalConfirmed\"]}\n                  duration={2000}\n                  formatValue={this.formatValue}\n                 \n                  easing=\"linear\"\n                />\n              </b>\n            </h6>\n          </div>\n          <div className=\"col s12 m6 l4\">\n            <h5>Total Deaths</h5>\n            <h6>\n              {\" \"}\n              <b>\n                <AnimatedNumber\n                  value={this.state.results[\"Global\"][\"TotalDeaths\"]}\n                  duration={1500}\n                  formatValue={this.formatValue}\n                 \n                  easing=\"linear\"\n                />\n              </b>\n            </h6>\n          </div>\n          <div className=\"col s12 m6 l4\">\n            <h5>Total Recovered</h5>\n            <h6>\n              {\" \"}\n              <b>\n                <AnimatedNumber\n                  value={this.state.results[\"Global\"][\"TotalRecovered\"]}\n                  duration={1500}\n                  formatValue={this.formatValue}\n                 \n                  easing=\"linear\"\n                />\n              </b>\n            </h6>\n          </div>\n          </div>\n          <hr />\n          <div className=\"row\">\n          <div className=\"col s12 m6 l4\">\n            <h5>New Confirmed Cases</h5>\n            <h6>\n              {\" \"}\n              <b>\n                <AnimatedNumber\n                  value={this.state.results[\"Global\"][\"NewConfirmed\"]}\n                  formatValue={this.formatValue}\n                  duration={1000}\n                  easing=\"linear\"\n                />\n              </b>\n            </h6>\n          </div>\n          <div className=\"col s12 m6 l4\">\n            <h5>New Deaths</h5>\n            <h6>\n              {\" \"}\n              <b>\n                <AnimatedNumber\n                  value={this.state.results[\"Global\"][\"NewDeaths\"]}\n                  duration={1000}\n                  formatValue={this.formatValue}\n                 \n                  easing=\"linear\"\n                />\n              </b>\n            </h6>\n          </div>\n         \n          <div className=\"col s12 m6 l4\">\n            <h5>New Recovered</h5>\n            <h6>\n              {\" \"}\n              <b>\n                <AnimatedNumber\n                  value={this.state.results[\"Global\"][\"NewRecovered\"]}\n                  duration={1000}\n                  formatValue={this.formatValue}\n                 \n                  easing=\"linear\"\n                />\n              </b>\n            </h6>\n          </div>\n         \n          </div> \n          <SearchCountry {...this.props} />   \n        </div>:<div/>\n  }\n     \n     \n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(GlobalStats);\n","import React, { Component, Fragment } from \"react\";\nimport GlobalStats from \"./globalstats\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChartBar } from '@fortawesome/free-solid-svg-icons';\nimport {withRouter} from 'react-router-dom';\nexport class Main extends Component {\n  render() {\n    return (\n      <Fragment>\n        <div className=\"container\" style={{marginTop:'20px'}}>\n          <h3>Get Exact Corona Stats Now   <FontAwesomeIcon icon={faChartBar}/></h3>\n          <div className=\"row\">\n            <div className=\"col\">\n              <p>\n                Coronavirus disease (COVID-19) is an infectious disease caused\n                by a newly discovered coronavirus. Most people who fall sick\n                with COVID-19 will experience mild to moderate symptoms and\n                recover without special treatment.With Coronavirus spreading\n                rapidly , Its safe to be at your Home .<b>Stay Home , Stay safe !</b> \n              </p>\n            </div>\n            \n          </div>\n          <GlobalStats {...this.props}/>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(Main);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport M from 'materialize-css';\nimport './index.css';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport class DetailView extends Component {\n  state = {\n    confirmed: null,\n    deaths:null,\n    recovered:null,\n    isCL:false,\n    isDL:false,\n    isRL:false,\n    totalRecovered:0,\n    totalConfirmed:0,\n    totalDeaths:0\n  };\n  componentDidMount(){\n    this.setState({});\n  }\n  shouldComponentUpdate(){\n\n    if(!this.state.confirmed||!this.state.deaths||!this.state.recovered){\n      return true;\n    }\n    return false;\n  }\n\n\n  componentDidUpdate() {\n    M.Tabs.init(document.querySelector('.tabs'),{});\n   if(!this.state.isCL&&!this.state.isDL&!this.state.isRL){\n    this.setState({isCL:true,isDL:true,isRL:true});\n    console.log(\"hello\")\n    axios\n      .get(\n        \"https://api.covid19api.com/total/country/\" +\n          this.props.match.params.country.trim()+\"/status/confirmed\"\n      )\n      .then((res) => this.setState({ confirmed: res.data ,isCL:false}))\n      .catch((err) => console.log(err.message));\n      axios\n      .get(\n        \"https://api.covid19api.com/total/country/\" +\n          this.props.match.params.country.trim()+\"/status/deaths\"\n      )\n      .then((res) => this.setState({ deaths: res.data ,isDL:false}))\n      .catch((err) => console.log(err.message));\n      axios\n      .get(\n        \"https://api.covid19api.com/total/country/\" +\n          this.props.match.params.country.trim()+\"/status/recovered\"\n      )\n      .then((res) => this.setState({ recovered: res.data ,isRL:false}))\n      .catch((err) => console.log(err.message));\n     \n   }\n  }\n\n  render() {\n    console.log(this.state.results);\n    let totalConfirmed = 0,totalDeaths = 0,totalRecovered = 0;\n    return (\n      <div>\n        { (this.state.isCL||this.state.isDL||this.state.isRL) ? <div  style={{display:'flex',justifyContent:'center'}}><div className=\"lds-facebook col s12 m\"><div></div><div></div><div></div></div></div>:\n        (<div className=\"row\">\n          <div className=\"col s12\">\n            <ul className=\"tabs\">\n              <li className=\"tab col s3\">\n                <a href=\"#ConfirmedCases\" className=\"active\">\n                  Confirmed Cases\n                </a>\n              </li>\n              <li className=\"tab col s3\">\n                <a href=\"#DeathCases\">Death Cases</a>\n              </li>\n\n              <li className=\"tab col s3\">\n                <a href=\"#RecoveredCases\">Recovered Cases</a>\n              </li>\n            </ul>\n          </div>\n\n          <div id=\"ConfirmedCases\" className=\"col s12\">\n            <div>\n              <h5>Confirmed Cases  </h5>\n              {this.state.confirmed ? (\n                  <div>\n                <ResponsiveContainer width=\"95%\" height={400}>\n                  <BarChart\n                    data={this.state.confirmed.map((obj) => {\n                      totalConfirmed = obj.Cases;\n                        return ({\n                      Date: obj.Date.slice(0, 10),\n                      Confirmed: obj.Cases,\n                    })})}\n                    margin={{ top: 20, right: 30, left: 30, bottom: 5 }}\n                  >\n                    <XAxis dataKey=\"Date\" stroke=\"#8884d8\" />\n                    <YAxis dataKey=\"Confirmed\" />\n                    <Tooltip />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                    <Bar dataKey=\"Confirmed\" fill=\"#8884d8\" barSize={30} />\n                  </BarChart>\n                 \n                </ResponsiveContainer>\n                <h5>Total Confirmed Cases <b> {totalConfirmed}</b> </h5>\n                </div>\n              ) : null}\n\n            </div>\n          </div>\n          <div id=\"DeathCases\" className=\"col s12\">\n            <div>\n              <h5>Death Cases</h5>\n              {this.state.deaths ? (\n                  <div>\n                <ResponsiveContainer width=\"95%\" height={400}>\n                  <BarChart\n                    data={this.state.deaths.map((obj) => {\n                        totalDeaths = obj.Cases;\n                        return ({\n                      Date: obj.Date.slice(0, 10),\n                      \"Death Cases\": obj.Cases,\n                    })})}\n                    margin={{ top: 20, right: 30, left: 30, bottom: 5 }}\n                  >\n                    <XAxis dataKey=\"Date\" stroke=\"#8884d8\" />\n                    <YAxis dataKey=\"Death Cases\" />\n                    <Tooltip />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                    <Bar dataKey=\"Death Cases\" fill=\"#8884d8\" barSize={30} />\n                  </BarChart>\n                </ResponsiveContainer>\n                <h5>Total Deaths Cases <b>{totalDeaths}</b></h5>\n                </div>\n              ) : null}\n            </div>\n          </div>\n          <div id=\"RecoveredCases\" className=\"col s12\">\n            <div>\n              <h5>Recovered Cases</h5>\n              {this.state.recovered ? (\n                  <div>\n                <ResponsiveContainer width=\"95%\" height={400}>\n                  <BarChart\n                    data={this.state.recovered.map((obj) => {\n                        totalRecovered=obj.Cases;\n                        return({\n                      Date: obj.Date.slice(0, 10),\n                      \"Recovered Cases\": obj.Cases,\n                    })})}\n                    margin={{ top: 20, right: 30, left: 30, bottom: 5 }}\n                  >\n                    <XAxis dataKey=\"Date\" stroke=\"#8884d8\" />\n                    <YAxis dataKey=\"Recovered Cases\" />\n                    <Tooltip />\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                    <Bar\n                      dataKey=\"Recovered Cases\"\n                      fill=\"#8884d8\"\n                      barSize={30}\n                    />\n                  </BarChart>\n                </ResponsiveContainer>\n                <h5>\n                    Total Recovered Cases <b>{totalRecovered}</b>\n                </h5>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>)}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(DetailView);\n","import React, { Fragment } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub,faLinkedin} from '@fortawesome/free-brands-svg-icons';\nimport './about.css';\nfunction About() {\n  return (\n    <Fragment>\n        <div className=\"container\">\n      <h1>About</h1>\n      <p>\n          Version 1.0.0<br/>\n          Powered by COVID-19 API\n      </p>\n      <hr/>\n      <h5 className=\"m-4\">Made by Arun</h5>\n      <div style={{fontSize:'30px'}}>\n          <a href=\"https://github.com/ArunMurugan78\" className=\"git\" style={{margin:'20px'}}><FontAwesomeIcon icon={faGithub}/></a>\n     \n        <a href=\"https://www.linkedin.com/in/arun-murugan-50885717a/\"><FontAwesomeIcon icon={faLinkedin}/></a>\n      </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport NavBar from \"./layout/navbar\";\nimport \"./App.css\";\nimport Main from \"./main\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport DetailView from \"./detailview\";\nimport About from './about';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <Switch>\n      <Route path=\"/about\" component={About} />\n        <Route path=\"/:country\" render={(props) => <DetailView {...props} />} />\n       \n        <Route path=\"/\" render={(props) => <Main {...props} />} />\n      </Switch>{\" \"}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}